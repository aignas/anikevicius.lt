# Make `pkg` an namespace package.
__path__ = __import__("pkgutil").extend_path(__path__, __name__)  # type: ignore


__lazy_imports = {
    "foo": (".dir.lib", "foo"),
}


def __getattr__(name: str):
    # PEP-562: Lazy loaded attributes on python modules, similarly to what Apache Airflow does under the hood in 2.5.1
    module_path, attr_name = __lazy_imports.get(name, ("", ""))

    if not module_path:
        raise AttributeError(f"module {__name__!r} has no attribute {name!r}")

    import importlib

    mod = importlib.import_module(module_path, __name__)
    if attr_name:
        val = getattr(mod, attr_name)
    else:
        val = mod

    # Store for next time
    globals()[name] = val
    return val


def fizz():
    return "buzz"
